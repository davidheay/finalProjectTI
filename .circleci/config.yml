version: 2.1

executors:
  my-executor:
    docker:
      - image: cimg/openjdk:11.0

jobs:
  build-and-test-dev:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Test
          command: mvn test
      - persist_to_workspace:
          root: /home/circleci/project/target
          paths:
            - demo.war
  deploy-app-dev1:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "af:7b:be:be:84:bd:37:6e:1d:17:00:63:c7:ae:49:b3"
      - run:
          name: "stop last app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer2Dev} "./apache-tomcat-9.0.46/bin/shutdown.sh"
      - run:
          name: "copy app"
          command: |
            scp -o StrictHostKeyChecking=no ./demo.war ubuntu@${ipServer2Dev}:~/apache-tomcat-9.0.46/webapps/demo.war
      - run:
          name: "run app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer2Dev} "./apache-tomcat-9.0.46/bin/startup.sh"
  deploy-app-dev2:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "af:7b:be:be:84:bd:37:6e:1d:17:00:63:c7:ae:49:b3"
      - run:
          name: "stop last app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer1Dev} "./apache-tomcat-9.0.46/bin/shutdown.sh"
      - run:
          name: "copy app"
          command: |
            scp -o StrictHostKeyChecking=no ./demo.war ubuntu@${ipServer1Dev}:~/apache-tomcat-9.0.46/webapps/demo.war
      - run:
          name: "run app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer1Dev} "./apache-tomcat-9.0.46/bin/startup.sh"
  
  build-and-test-prod:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Test
          command: mvn test
      - persist_to_workspace:
          root: /home/circleci/project/target
          paths:
            - demo.war
  deploy-app-prod1:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "af:7b:be:be:84:bd:37:6e:1d:17:00:63:c7:ae:49:b3"
      - run:
          name: "stop last app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer2Prod} "./apache-tomcat-9.0.46/bin/shutdown.sh"
      - run:
          name: "copy app"
          command: |
            scp -o StrictHostKeyChecking=no ./demo.war ubuntu@${ipServer2Prod}:~/apache-tomcat-9.0.46/webapps/demo.war
      - run:
          name: "run app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer2Prod} "./apache-tomcat-9.0.46/bin/startup.sh"
  deploy-app-prod2:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "af:7b:be:be:84:bd:37:6e:1d:17:00:63:c7:ae:49:b3"
      - run:
          name: "stop last app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer1Prod} "./apache-tomcat-9.0.46/bin/shutdown.sh"
      - run:
          name: "copy app"
          command: |
            scp -o StrictHostKeyChecking=no ./demo.war ubuntu@${ipServer1Prod}:~/apache-tomcat-9.0.46/webapps/demo.war
      - run:
          name: "run app"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@${ipServer1Prod} "./apache-tomcat-9.0.46/bin/startup.sh"

workflows:
  dev:
    jobs:
      - build-and-test-dev:
          filters:
            branches:
              only:
                - dev
      - hold-dev:
          type: approval
          requires:
            - build-and-test-dev
      - deploy-app-dev1:
          requires:
            - hold-dev
      - deploy-app-dev2:
          requires:
            - hold-dev
      
      - build-and-test-prod:
          filters:
            branches:
              only:
                - main
      - hold-prod:
          type: approval
          requires:
            - build-and-test-prod
      - deploy-app-prod1:
          requires:
            - hold-prod
      - deploy-app-prod2:
          requires:
            - hold-prod
